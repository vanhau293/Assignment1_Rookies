<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="java.lang.IncompatibleClassChangeError"/>
    <fullyQualifiedTypeName name="javax.validation.Valid"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.example.demo.data.repositories.CategoryRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.data.repositories.BookRepository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="javax.persistence.NamedQuery"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.response.BookResponseDto"/>
    <fullyQualifiedTypeName name="com.example.demo.data.entities.BookEntity"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.response.BookDetailsResponseDto"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.response.AuthorResponseDto"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.response.CategoryResponseDto"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Max"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Min"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Pattern"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="com.example.demo.data.entities.CategoryEntity"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.request.AuthorRequestDto"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.request.CategoryRequestDto"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.request.BookUpdateRequestDto"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.MalformedJwtException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.ExpiredJwtException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.UnsupportedJwtException"/>
    <fullyQualifiedTypeName name="com.example.demo.security.jwt.JwtAuthEntryPoint"/>
    <fullyQualifiedTypeName name="com.example.demo.security.jwt.JwtAuthTokenFilter"/>
    <fullyQualifiedTypeName name="com.example.demo.security.services.UserDetailsServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="com.example.demo.security.jwt.JwtUtils"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.data.repositories.RoleRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.request.LoginRequest"/>
    <fullyQualifiedTypeName name="com.example.demo.security.services.UserDetailsImpl"/>
    <fullyQualifiedTypeName name="com.example.demo.payload.response.JwtResponse"/>
    <fullyQualifiedTypeName name="com.example.demo.payload.request.LoginRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="com.example.demo.data.repositories.AccountRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.payload.request.SignupRequest"/>
    <fullyQualifiedTypeName name="com.example.demo.payload.response.MessageResponse"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.example.demo.data.entities.RoleEntity"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaRepositories"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.example.demo.data.entities.AccountEntity"/>
    <fullyQualifiedTypeName name="com.example.demo.exceptions.ResourceFoundException"/>
</qualifiedTypeNameHistroy>
